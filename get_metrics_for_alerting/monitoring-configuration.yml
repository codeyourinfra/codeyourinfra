---
- hosts: monitor
  become: true
  tasks:
    - name: Install influxdb Python package
      pip:
        name: influxdb
    - name: Create the InfluxDB database
      influxdb_database:
        database_name: monitor
    - name: Create the Grafana datasource
      uri:
        url: http://localhost:3000/api/datasources
        method: POST
        user: admin
        password: admin
        force_basic_auth: yes
        body: "{{lookup('file','monitor-datasource.json')}}"
        body_format: json
      register: response
      changed_when: response.status == 200
      failed_when: response.status != 200 and response.json.message != "Data source with same name already exists"
    - name: Get the alert notifications
      uri:
        url: http://localhost:3000/api/alert-notifications
        method: GET
        user: admin
        password: admin
        force_basic_auth: yes
      register: alert_notifications
    - name: Create the Slack notification channel
      uri:
        url: http://localhost:3000/api/alert-notifications
        method: POST
        user: admin
        password: admin
        force_basic_auth: yes
        body: "{{lookup('file','slack-notification-channel.json')}}"
        body_format: json
      when: alert_notifications.json|json_query("[?name=='Slack notification channel']")|length == 0
      register: response
      changed_when: response.status == 200
    - name: Create the Grafana dashboard
      uri:
        url: http://localhost:3000/api/dashboards/db
        method: POST
        user: admin
        password: admin
        force_basic_auth: yes
        body: "{{lookup('file','used_mem_pct-dashboard.json')}}"
        body_format: json
      register: response
      changed_when: response.status == 200
      failed_when: response.status != 200 and response.json.message != "A dashboard with the same name in the folder already exists"
    - name: Create the Ansible directory if it doesn't exist
      file:
        path: /etc/ansible
        state: directory
    - name: Copy the Ansible inventory
      copy:
        src: monitored_hosts
        dest: /etc/ansible/hosts
    - name: Disable SSH key host checking
      ini_file:
        path: /etc/ansible/ansible.cfg
        section: defaults
        option: host_key_checking
        value: False
    - name: Create the Ansible playbooks directory if it doesn't exist
      file:
        path: /etc/ansible/playbooks
        state: directory
    - name: Copy the playbook-get-metrics.yml
      template:
        src: playbook-get-metrics.yml
        dest: /etc/ansible/playbooks/playbook-get-metrics.yml
        owner: root
        group: root
        mode: 0644
        variable_start_string: '[%'
        variable_end_string: '%]'
    - name: Get metrics from monitored servers every minute
      cron:
        name: "get metrics"
        job: "/usr/local/bin/ansible-playbook /etc/ansible/playbooks/playbook-get-metrics.yml > /etc/ansible/playbooks/playbook-get-metrics.log 2>&1"
